=========================================
opennebula Debian package
=========================================

Fresh install
-----------------------------------------

'opennebula' Debian package contains OpenNebula Controller which will
manage all nodes from your cloud. After installation of this package,
OpenNebula daemon will start. The daemon can be managed like this:

  root@controller> /etc/init.d/opennebula [start|stop|restart]

Login as the 'oneadmin' user:

  root@controller> su - oneadmin

And use the OpenNebula CLI:

  oneadmin@controller> oneuser list

Upgrading
-----------------------------------------

OpenNebula requires the user to run a script to update an existing database
to the installed version. You will know when you need to run the script when
the following message is displayed after upgrading:

-------------------
#Database version mismatch.
oned failed to start
-------------------

To upgrade the Database run

  oneadmin@controller> onedb upgrade -v --sqlite /var/lib/one/one.db

With OpenNebula 3.6 the oZones server database format has changed slightly.
Use the onezonedb shell script to upgrade the database:

  oneadmin@controller> onezonedb -t sqlite -l /var/lib/one/ozones.db


Add a new host (node) in OpenNebula pool
-----------------------------------------

1. Install 'opennebula-node' debian package in destination host

  root@node01> apt-get install opennebula-node

2. Copy controller ssh key to node01

  root@controller> su - oneadmin
  oneadmin@controller> cat $HOME/.ssh/id_rsa.pub
  <COPY YOUR CONTROLLER SSH PUBKEY>

  root@node01> su - oneadmin
  oneadmin@node01> vi $HOME/.ssh/authorized_keys
  <PAST YOUR CONTROLLER SSH PUBKEY>

3. Test an connection from controller to node01

  root@controller> su - oneadmin
  oneadmin@controller> ssh oneadmin@node01
    The authenticity of host 'node01 (192.168.0.2)' can't be established.
    RSA key fingerprint is [].
    Are you sure you want to continue connecting (yes/no)? [yes]
    Warning: Permanently added 'node01,192.168.0.2' (RSA) to the list of known hosts.
  oneadmin@node01>

4. Add this host into OpenNebula pool

  oneadmin@controller> onehost create node01 --im im_kvm --vm vmm_kvm --net dummy
  
5. Check node registration on controller

  oneadmin@controller> onehost list
  ID NAME         CLUSTER     RVM   TCPU   FCPU   ACPU   TMEM   FMEM   AMEM STAT
   0 node01       -             0      0      0    100     0K     0K     0K   on


Sample setup
-----------------------------------------
Here is a sample setup which is adapted from
<http://www.opennebula.org/documentation:rel3.2:vmg>
It's based on a simple and small image of TTYLinux <http://minimalinux.org/ttylinux/>

Download a tarball from OpenNebula project :

  oneadmin@controller> cd
  oneadmin@controller> mkdir one-templates
  oneadmin@controller> cd one-templates
  oneadmin@controller> wget http://dev.opennebula.org/attachments/download/355/ttylinux.tar.gz
  oneadmin@controller> tar xvzf ttylinux.tar.gz

Then, create a first virtual network (using virbr0 as bridge by default) :

  oneadmin@controller> vi small_network.net
-------------------
NAME = "Small network"
TYPE = FIXED
# virbr0 = bridge device used by libvirt /etc/libvirt/qemu/networks/default.xml
BRIDGE = virbr0
LEASES = [ IP="192.168.122.2"]
-------------------
  oneadmin@controller> onevnet create small_network.net
  oneadmin@controller> onevnet list
  ID USER     GROUP    NAME            CLUSTER    TYPE BRIDGE  LEASES
   0 oneadmin oneadmin Small network   -             F virbr0       0


Import VM image into default datastore. Note that /var/lib/one is not allowed to
copy images from by default. Please use other tmp dir (e.g. /var/tmp/) for this test.

  oneadmin@controller> vi image.one
-------------------
NAME = ttylinux
PATH = "/var/tmp/ttylinux.img"
TYPE = OS
-------------------
  oneadmin@controller> cp ttylinux.img /var/tmp/ttylinux.img
  oneadmin@controller> oneimage create image.one --datastore default
  oneadmin@controller> oneimage list
  ID USER     GROUP    NAME         DATASTORE     SIZE TYPE PER STAT  RVMS
   0 oneadmin oneadmin ttylinux     default        40M   OS  No  rdy     0

Finally, you can create the template configuration for this small VM :

  oneadmin@controller> vi ttylinux.one
-------------------
NAME   = ttylinux
CPU    = 0.1
MEMORY = 64
DISK   = [ IMAGE_ID = 0 ]
NIC    = [ NETWORK_ID = 0 ]
FEATURES = [ acpi="no" ]
GRAPHICS = [ type = "vnc", listen = "0.0.0.0" ]
-------------------
  oneadmin@controller> onevm create ttylinux.one

VM has been autostarted and deployed on one of your host.
You can SSH to it (login is root and password is password) :

  oneadmin@controller> onevm show ttylinux|grep IP
  IP=192.168.122.2
  oneadmin@controller> ssh root@192.168.122.2

